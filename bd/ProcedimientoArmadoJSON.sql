-- MySQL Script generated by MySQL Workbench
-- Wed May 15 15:12:19 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mydb` ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema new_schema1
-- -----------------------------------------------------
USE `mydb` ;
USE `mydb` ;

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`DataFull`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`DataFull` (`id` INT);

-- -----------------------------------------------------
-- View `mydb`.`DataFull`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`DataFull`;
USE `mydb`;
CREATE  OR REPLACE PROCEDURE `PlantasDataFull` ()
BEGIN
USE `RinconBotanico`;
CREATE OR REPLACE VIEW PlantasConFoto AS SELECT plantas.idPlantas, PlantasNombre, idCategoria, CategoriaDescripcion, imagenes.ImagenesLinkFoto FROM RinconBotanico.plantas INNER JOIN RinconBotanico.imagenes WHERE imagenes.idPlantas=plantas.idPlantas;
SELECT * FROM PlantasConFoto;
CREATE OR REPLACE VIEW DataFull AS SELECT PlantasConFoto.idPlantas, PlantasNombre, idCategoria, CategoriaDescripcion, ImagenesLinkFoto, dataplantas.Ubicacion, dataplantas.Sustrato, dataplantas.Riego, dataplantas.Floracion, dataplantas.Tamano, dataplantas.Observaciones FROM RinconBotanico.PlantasConFoto INNER JOIN dataplantas WHERE `dataplantas`.`idPlantas`=`PlantasConFoto`.`idPlantas`;
SELECT * FROM DataFull;

END;
USE `mydb`;

DELIMITER $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Plantas_BEFORE_INSERT` BEFORE INSERT ON `Plantas` FOR EACH ROW
BEGIN

END
$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Plantas_AFTER_INSERT` AFTER INSERT ON `Plantas` FOR EACH ROW
BEGIN

END
$$


DELIMITER ;
CREATE USER 'Ana' IDENTIFIED BY 'ana';

GRANT SELECT ON TABLE `mydb`.* TO 'Ana';
GRANT SELECT ON TABLE `new_schema1`.* TO 'Ana';
GRANT SELECT, INSERT, TRIGGER ON TABLE `mydb`.* TO 'Ana';
GRANT SELECT, INSERT, TRIGGER ON TABLE `new_schema1`.* TO 'Ana';
GRANT SELECT, INSERT, TRIGGER, UPDATE, DELETE ON TABLE `mydb`.* TO 'Ana';
GRANT SELECT, INSERT, TRIGGER, UPDATE, DELETE ON TABLE `new_schema1`.* TO 'Ana';
GRANT EXECUTE ON ROUTINE `mydb`.* TO 'Ana';
GRANT EXECUTE ON ROUTINE `new_schema1`.* TO 'Ana';
CREATE USER 'DBA' IDENTIFIED BY 'RWei10669#$';

GRANT ALL ON `mydb`.* TO 'DBA';
GRANT ALL ON `new_schema1`.* TO 'DBA';
GRANT SELECT ON TABLE `mydb`.* TO 'DBA';
GRANT SELECT ON TABLE `new_schema1`.* TO 'DBA';
GRANT SELECT, INSERT, TRIGGER ON TABLE `mydb`.* TO 'DBA';
GRANT SELECT, INSERT, TRIGGER ON TABLE `new_schema1`.* TO 'DBA';
GRANT SELECT, INSERT, TRIGGER, UPDATE, DELETE ON TABLE `mydb`.* TO 'DBA';
GRANT SELECT, INSERT, TRIGGER, UPDATE, DELETE ON TABLE `new_schema1`.* TO 'DBA';
GRANT EXECUTE ON ROUTINE `mydb`.* TO 'DBA';
GRANT EXECUTE ON ROUTINE `new_schema1`.* TO 'DBA';
CREATE USER 'JuanCarlos' IDENTIFIED BY 'juan';

GRANT SELECT ON TABLE `mydb`.* TO 'JuanCarlos';
GRANT SELECT ON TABLE `new_schema1`.* TO 'JuanCarlos';
GRANT SELECT, INSERT, TRIGGER ON TABLE `mydb`.* TO 'JuanCarlos';
GRANT SELECT, INSERT, TRIGGER ON TABLE `new_schema1`.* TO 'JuanCarlos';
GRANT SELECT, INSERT, TRIGGER, UPDATE, DELETE ON TABLE `mydb`.* TO 'JuanCarlos';
GRANT SELECT, INSERT, TRIGGER, UPDATE, DELETE ON TABLE `new_schema1`.* TO 'JuanCarlos';
GRANT EXECUTE ON ROUTINE `mydb`.* TO 'JuanCarlos';
GRANT EXECUTE ON ROUTINE `new_schema1`.* TO 'JuanCarlos';
CREATE USER 'Paola';

GRANT ALL ON `mydb`.* TO 'Paola';
GRANT ALL ON `new_schema1`.* TO 'Paola';
GRANT SELECT ON TABLE `mydb`.* TO 'Paola';
GRANT SELECT ON TABLE `new_schema1`.* TO 'Paola';
GRANT SELECT, INSERT, TRIGGER ON TABLE `mydb`.* TO 'Paola';
GRANT SELECT, INSERT, TRIGGER ON TABLE `new_schema1`.* TO 'Paola';
GRANT SELECT, INSERT, TRIGGER, UPDATE, DELETE ON TABLE `mydb`.* TO 'Paola';
GRANT SELECT, INSERT, TRIGGER, UPDATE, DELETE ON TABLE `new_schema1`.* TO 'Paola';
GRANT EXECUTE ON ROUTINE `mydb`.* TO 'Paola';
GRANT EXECUTE ON ROUTINE `new_schema1`.* TO 'Paola';
CREATE USER 'MarcelaCerda' IDENTIFIED BY 'marcela';

GRANT SELECT ON TABLE `mydb`.* TO 'MarcelaCerda';
GRANT SELECT ON TABLE `new_schema1`.* TO 'MarcelaCerda';
GRANT SELECT, INSERT, TRIGGER ON TABLE `mydb`.* TO 'MarcelaCerda';
GRANT SELECT, INSERT, TRIGGER ON TABLE `new_schema1`.* TO 'MarcelaCerda';
GRANT SELECT, INSERT, TRIGGER, UPDATE, DELETE ON TABLE `mydb`.* TO 'MarcelaCerda';
GRANT SELECT, INSERT, TRIGGER, UPDATE, DELETE ON TABLE `new_schema1`.* TO 'MarcelaCerda';
GRANT EXECUTE ON ROUTINE `mydb`.* TO 'MarcelaCerda';
GRANT EXECUTE ON ROUTINE `new_schema1`.* TO 'MarcelaCerda';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
